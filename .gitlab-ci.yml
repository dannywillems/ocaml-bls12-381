stages:
  # - dependencies-check
  - lint
  - build
  - benchmark
  - install
  - doc
  - deploy

# FIXME: Works locally but not in the CI since virtual library has been removed
# check-blst-version:
#   stage: dependencies-check
#   image: alpine:3.14
#   before_script:
#     - apk add --no-cache wget diffutils
#     - diff --version
#   script:
#     - .ci/check_blst_version.sh
#   rules:
#     - when: always

lint-js:
  image: node:lts
  stage: lint
  before_script:
    - cd .ci/js
    - npm install -d
  script:
    - ./node_modules/eslint/bin/eslint.js -c .eslintrc.js ../../src/runtime_helper.js
    - ./node_modules/eslint/bin/eslint.js -c .eslintrc.js ../../src/bindings/blst_bindings_stubs.js
    - ./node_modules/eslint/bin/eslint.js -c .eslintrc.js ../../src/primitives/poseidon128/caml_poseidon128_stubs.js
    - ./node_modules/eslint/bin/eslint.js -c .eslintrc.js ../../src/primitives/rescue/caml_rescue_stubs.js
  rules:
    - when: always
  allow_failure: true

lint:
  stage: lint
  image: ocaml/opam:debian-ocaml-4.12
  before_script:
    # Pin temporary to get the fix for https://github.com/ocaml-ppx/ocamlformat/issues/1984
    - opam pin add ocamlformat.0.20.1 git+https://github.com/ocaml-ppx/ocamlformat\#fb005d5abc34bad8b7c39b9da04a16d997932a0d --no-action
    - opam install ocamlformat.0.20.1
  script:
    - dune build @fmt
  rules:
    - when: always

lint-c:
  stage: lint
  image: ubuntu:20.04
  script:
    - apt-get update -y
    - apt-get install clang-format-11 git -y
    - clang-format-11 --version
    - clang-format-11 src/primitives/fft/*.c -i
    - clang-format-11 src/primitives/fft/*.h -i
    - clang-format-11 src/primitives/poseidon128/*.c -i
    - clang-format-11 src/primitives/poseidon128/*.h -i
    - clang-format-11 src/primitives/rescue/*.c -i
    - clang-format-11 src/primitives/rescue/*.h -i
    - clang-format-11 src/bindings/*.c -i
    - clang-format-11 src/bindings/*.h -i
    # Check if a file has been modified and uncommited
    - git diff --exit-code
  rules:
    - when: always

# Build pipeline for alpine
# Keep it close to the one for other distributions
.build-test-debian: &build_definition_debian
  stage: build
  before_script:
    # Always update system package manager + setup OPAM env
    - sudo apt-get update
    - eval $(opam env)
    - opam update
    - sudo apt-get install emscripten nodejs -y
    - opam depext -i -y conf-pkg-config conf-libffi
    # List versions and environments
    - ocaml --version
    - opam --version
    - cc --version
    - emcc --version
    - echo $OPAM_SWITCH_PREFIX
  script:
    # Install external dependencies
    - opam depext -i -y zarith
    # Pin for later installation
    - opam pin add bls12-381.dev . --no-action
    # Install the dependencies
    - opam install bls12-381 -y --with-test --deps-only
    # For benchmark repository
    - opam install core_bench
    - dune build
    - dune build @install
    - dune build @runtest
    - dune build @runtest-js
  rules:
    - when: always

build-ocaml-4.08-debian-10:
  <<: *build_definition_debian
  image: ocaml/opam:debian-10-ocaml-4.08

build-ocaml-4.09-debian-10:
  <<: *build_definition_debian
  image: ocaml/opam:debian-10-ocaml-4.09

build-ocaml-4.10-debian-10:
  <<: *build_definition_debian
  image: ocaml/opam:debian-10-ocaml-4.10

build-ocaml-4.11-debian-10:
  <<: *build_definition_debian
  image: ocaml/opam:debian-10-ocaml-4.11

build-ocaml-4.12-debian-10:
  <<: *build_definition_debian
  image: ocaml/opam:debian-10-ocaml-4.12

build-ocaml-4.13-debian-10:
  <<: *build_definition_debian
  image: ocaml/opam:debian-10-ocaml-4.13

build-ocaml-4.14-debian-10:
  <<: *build_definition_debian
  image: ocaml/opam:debian-10-ocaml-4.14

build-ocaml-4.08-debian-11:
  <<: *build_definition_debian
  image: ocaml/opam:debian-11-ocaml-4.08

build-ocaml-4.09-debian-11:
  <<: *build_definition_debian
  image: ocaml/opam:debian-11-ocaml-4.09

build-ocaml-4.10-debian-11:
  <<: *build_definition_debian
  image: ocaml/opam:debian-11-ocaml-4.10

build-ocaml-4.11-debian-11:
  <<: *build_definition_debian
  image: ocaml/opam:debian-11-ocaml-4.11

build-ocaml-4.12-debian-11:
  <<: *build_definition_debian
  image: ocaml/opam:debian-11-ocaml-4.12

build-ocaml-4.13-debian-11:
  <<: *build_definition_debian
  image: ocaml/opam:debian-11-ocaml-4.13

build-ocaml-4.14-debian-11:
  <<: *build_definition_debian
  image: ocaml/opam:debian-11-ocaml-4.14

# Build pipeline for alpine
# Keep it close to the one for other distributions
# Keep it close to utils/Dockerfile-alpine to be able to debug alpine on a dev
# machine.
.build-test-alpine: &build_definition_alpine
  stage: build
  before_script:
    # Always update system package manager + setup OPAM env
    - eval $(opam env)
    - opam update
    - opam depext -i -y conf-pkg-config conf-libffi
    - sudo apk add build-base emscripten nodejs
    # List versions and environments
    - ocaml --version
    - opam --version
    - cc --version
    - echo $OPAM_SWITCH_PREFIX
  script:
    # Install external dependencies
    - opam depext -i -y zarith
    # Pin for later installation
    - opam pin add bls12-381.dev . --no-action
    # Install the dependencies
    - opam install bls12-381 -y --with-test --deps-only
    - dune build @install
    - dune build @runtest
    - dune build @runtest-js
  rules:
    - when: always

build-ocaml-4.08-alpine-3.14:
  <<: *build_definition_alpine
  image: ocaml/opam:alpine-3.14-ocaml-4.08

build-ocaml-4.09-alpine-3.14:
  <<: *build_definition_alpine
  image: ocaml/opam:alpine-3.14-ocaml-4.09

build-ocaml-4.10-alpine-3.14:
  <<: *build_definition_alpine
  image: ocaml/opam:alpine-3.14-ocaml-4.10

build-ocaml-4.11-alpine-3.14:
  <<: *build_definition_alpine
  image: ocaml/opam:alpine-3.14-ocaml-4.11

build-ocaml-4.12-alpine-3.14:
  <<: *build_definition_alpine
  image: ocaml/opam:alpine-3.14-ocaml-4.12

build-ocaml-4.13-alpine-3.14:
  <<: *build_definition_alpine
  image: ocaml/opam:alpine-3.14-ocaml-4.13

build-ocaml-4.14-alpine-3.14:
  <<: *build_definition_alpine
  image: ocaml/opam:alpine-3.14-ocaml-4.14

build-ocaml-4.08-alpine-3.15:
  <<: *build_definition_alpine
  image: ocaml/opam:alpine-3.15-ocaml-4.08

build-ocaml-4.09-alpine-3.15:
  <<: *build_definition_alpine
  image: ocaml/opam:alpine-3.15-ocaml-4.09

build-ocaml-4.10-alpine-3.15:
  <<: *build_definition_alpine
  image: ocaml/opam:alpine-3.15-ocaml-4.10

build-ocaml-4.11-alpine-3.15:
  <<: *build_definition_alpine
  image: ocaml/opam:alpine-3.15-ocaml-4.11

build-ocaml-4.12-alpine-3.15:
  <<: *build_definition_alpine
  image: ocaml/opam:alpine-3.15-ocaml-4.12

build-ocaml-4.13-alpine-3.15:
  <<: *build_definition_alpine
  image: ocaml/opam:alpine-3.15-ocaml-4.13

build-ocaml-4.14-alpine-3.15:
  <<: *build_definition_alpine
  image: ocaml/opam:alpine-3.15-ocaml-4.14

# Benchmarks
.benchmark: &benchmark_definition
  stage: benchmark
  before_script:
    # Always update system package manager + setup OPAM env
    - sudo apt-get update && sudo apt-get upgrade -y
    - eval $(opam env)
    - opam repository set-url default https://opam.ocaml.org
    - opam update
    # List versions and environments
    - ocaml --version
    - opam --version
    - cc --version
    - echo $OPAM_SWITCH_PREFIX
    # Depext
    - opam depext -i -y zarith conf-pkg-config conf-libffi
    # Pin for later installation
    - opam pin add bls12-381.dev . --no-action
    # Install the packages
    - opam install bls12-381 -y --with-test
  script:
    # Benchmark
    - opam install core_bench
    - dune build benchmark/bench_fr.exe
    - dune build benchmark/bench_g1.exe
    - dune build benchmark/bench_g2.exe
    - dune build benchmark/bench_pairing.exe
    - dune build benchmark/bench_signature.exe
  rules:
    - when: always

benchmark-ocaml-4.09:
  <<: *benchmark_definition
  image: ocaml/opam:debian-ocaml-4.09

opam-install-and-remove:
  stage: install
  image: ocaml/opam:debian-ocaml-4.11
  before_script:
    # List versions and environments
    - ocaml --version
    - opam --version
    - cc --version
    - echo $OPAM_SWITCH_PREFIX
    - opam repository set-url default https://opam.ocaml.org
    - opam update
  script:
  script:
    - opam pin add bls12-381.dev . --no-action

    - opam depext bls12-381.dev -y -v
    - opam install bls12-381.dev -y -v --deps-only
    - opam install bls12-381.dev -y -v
    - opam remove -a -y bls12-381.dev
  rules:
    - when: always

opam-install-and-remove-local-switch:
  stage: install
  image: ocaml/opam:debian-ocaml-4.09
  before_script:
    # Run everything in a local switch
    - opam switch create ./ 4.09.1 --no-install
    - eval $(opam config env)
    # List versions and environments
    - ocaml --version
    - opam --version
    - cc --version
    - echo $OPAM_SWITCH_PREFIX
    - opam repository set-url default https://opam.ocaml.org
    - opam update
  script:
    - opam pin add bls12-381.dev . --no-action

    - opam depext bls12-381.dev -y -v
    - opam install bls12-381.dev -y -v --deps-only
    - opam install bls12-381.dev -y -v
    - opam remove -a -y bls12-381.dev
  rules:
    - when: always

check-blst-headers-are-installed:
  stage: install
  image: ocaml/opam:debian-ocaml-4.12
  before_script:
    # List versions and environments
    - ocaml --version
    - opam --version
    - cc --version
    - echo $OPAM_SWITCH_PREFIX
    - opam repository set-url default https://opam.ocaml.org
    - opam update
  script:
    - opam pin add bls12-381.dev . --no-action
    - opam depext bls12-381.dev -y -v
    - opam install bls12-381.dev -y -v --deps-only
    - opam install bls12-381.dev -y -v
    - ls $OPAM_SWITCH_PREFIX/lib/bls12-381/blst.h
    - ls $OPAM_SWITCH_PREFIX/lib/bls12-381/blst_aux.h
    - ls $OPAM_SWITCH_PREFIX/lib/bls12-381/blst_misc.h
    - ls $OPAM_SWITCH_PREFIX/lib/bls12-381/caml_bls12_381_stubs.h
  rules:
    - when: always

doc:
  stage: doc
  image: ocaml/opam:debian-ocaml-4.12
  before_script:
    - sudo apt-get update && sudo apt-get upgrade -y
    - eval $(opam env)
    - opam repository set-url default https://opam.ocaml.org
    - opam update
    - opam depext -i -y zarith conf-libffi conf-perl conf-pkg-config
    - sudo apt-get install m4 -y
    # Pin dev versions. Avoid clash with public opam-repository
    - opam pin add bls12-381.dev . --no-action
    - opam install odoc -y
    - opam install . -y --deps-only
  script:
    - dune build @doc
    - cp -r _build/default/_doc/_html _odoc/
  artifacts:
    paths:
      - _odoc
  rules:
    - when: always

pages:
  stage: deploy
  image: ocaml/opam:debian-ocaml-4.12
  script:
    - cp -r _odoc public/
  artifacts:
    paths:
      - public
  rules:
    - if: '$CI_COMMIT_BRANCH == "master"'
